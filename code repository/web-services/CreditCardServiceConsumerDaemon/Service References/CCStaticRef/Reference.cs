//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CreditCardServiceConsumerDaemon.CCStaticRef {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Ecetera.AppDynamics.Service", ConfigurationName="CCStaticRef.ICreditCardService")]
    public interface ICreditCardService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Ecetera.AppDynamics.Service/ICreditCardService/AuthoriseAndCharge", ReplyAction="http://Ecetera.AppDynamics.Service/ICreditCardService/AuthoriseAndChargeResponse")]
        string AuthoriseAndCharge(string creditcard, string expiry, string cvv, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Ecetera.AppDynamics.Service/ICreditCardService/AuthoriseAndCharge", ReplyAction="http://Ecetera.AppDynamics.Service/ICreditCardService/AuthoriseAndChargeResponse")]
        System.Threading.Tasks.Task<string> AuthoriseAndChargeAsync(string creditcard, string expiry, string cvv, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Ecetera.AppDynamics.Service/ICreditCardService/Authorise", ReplyAction="http://Ecetera.AppDynamics.Service/ICreditCardService/AuthoriseResponse")]
        string Authorise(string creditcard, string expiry, string cvv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Ecetera.AppDynamics.Service/ICreditCardService/Authorise", ReplyAction="http://Ecetera.AppDynamics.Service/ICreditCardService/AuthoriseResponse")]
        System.Threading.Tasks.Task<string> AuthoriseAsync(string creditcard, string expiry, string cvv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Ecetera.AppDynamics.Service/ICreditCardService/Credit", ReplyAction="http://Ecetera.AppDynamics.Service/ICreditCardService/CreditResponse")]
        int Credit(string creditcard, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Ecetera.AppDynamics.Service/ICreditCardService/Credit", ReplyAction="http://Ecetera.AppDynamics.Service/ICreditCardService/CreditResponse")]
        System.Threading.Tasks.Task<int> CreditAsync(string creditcard, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Ecetera.AppDynamics.Service/ICreditCardService/Debit", ReplyAction="http://Ecetera.AppDynamics.Service/ICreditCardService/DebitResponse")]
        int Debit(string creditcard, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Ecetera.AppDynamics.Service/ICreditCardService/Debit", ReplyAction="http://Ecetera.AppDynamics.Service/ICreditCardService/DebitResponse")]
        System.Threading.Tasks.Task<int> DebitAsync(string creditcard, double amount);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICreditCardServiceChannel : CreditCardServiceConsumerDaemon.CCStaticRef.ICreditCardService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreditCardServiceClient : System.ServiceModel.ClientBase<CreditCardServiceConsumerDaemon.CCStaticRef.ICreditCardService>, CreditCardServiceConsumerDaemon.CCStaticRef.ICreditCardService {
        
        public CreditCardServiceClient() {
        }
        
        public CreditCardServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CreditCardServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CreditCardServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CreditCardServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string AuthoriseAndCharge(string creditcard, string expiry, string cvv, double amount) {
            return base.Channel.AuthoriseAndCharge(creditcard, expiry, cvv, amount);
        }
        
        public System.Threading.Tasks.Task<string> AuthoriseAndChargeAsync(string creditcard, string expiry, string cvv, double amount) {
            return base.Channel.AuthoriseAndChargeAsync(creditcard, expiry, cvv, amount);
        }
        
        public string Authorise(string creditcard, string expiry, string cvv) {
            return base.Channel.Authorise(creditcard, expiry, cvv);
        }
        
        public System.Threading.Tasks.Task<string> AuthoriseAsync(string creditcard, string expiry, string cvv) {
            return base.Channel.AuthoriseAsync(creditcard, expiry, cvv);
        }
        
        public int Credit(string creditcard, double amount) {
            return base.Channel.Credit(creditcard, amount);
        }
        
        public System.Threading.Tasks.Task<int> CreditAsync(string creditcard, double amount) {
            return base.Channel.CreditAsync(creditcard, amount);
        }
        
        public int Debit(string creditcard, double amount) {
            return base.Channel.Debit(creditcard, amount);
        }
        
        public System.Threading.Tasks.Task<int> DebitAsync(string creditcard, double amount) {
            return base.Channel.DebitAsync(creditcard, amount);
        }
    }
}
