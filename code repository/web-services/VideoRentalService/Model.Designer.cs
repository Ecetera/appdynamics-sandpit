//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("sakilaModel", "fk_film_actor_actor", "actor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoRentalService.actor), "film_actor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoRentalService.film_actor), true)]
[assembly: EdmRelationshipAttribute("sakilaModel", "fk_address_city", "city", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoRentalService.city), "address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoRentalService.address), true)]
[assembly: EdmRelationshipAttribute("sakilaModel", "fk_customer_address", "address", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoRentalService.address), "customer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoRentalService.customer), true)]
[assembly: EdmRelationshipAttribute("sakilaModel", "fk_staff_address", "address", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoRentalService.address), "staff", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoRentalService.staff), true)]
[assembly: EdmRelationshipAttribute("sakilaModel", "fk_store_address", "address", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoRentalService.address), "store", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoRentalService.store), true)]
[assembly: EdmRelationshipAttribute("sakilaModel", "fk_film_category_category", "category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoRentalService.category), "film_category", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoRentalService.film_category), true)]
[assembly: EdmRelationshipAttribute("sakilaModel", "fk_city_country", "country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoRentalService.country), "city", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoRentalService.city), true)]
[assembly: EdmRelationshipAttribute("sakilaModel", "fk_customer_store", "store", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoRentalService.store), "customer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoRentalService.customer), true)]
[assembly: EdmRelationshipAttribute("sakilaModel", "fk_payment_customer", "customer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoRentalService.customer), "payment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoRentalService.payment), true)]
[assembly: EdmRelationshipAttribute("sakilaModel", "fk_rental_customer", "customer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoRentalService.customer), "rental", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoRentalService.rental), true)]
[assembly: EdmRelationshipAttribute("sakilaModel", "fk_film_actor_film", "film", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoRentalService.film), "film_actor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoRentalService.film_actor), true)]
[assembly: EdmRelationshipAttribute("sakilaModel", "fk_film_category_film", "film", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoRentalService.film), "film_category", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoRentalService.film_category), true)]
[assembly: EdmRelationshipAttribute("sakilaModel", "fk_film_language", "language", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoRentalService.language), "film", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoRentalService.film), true)]
[assembly: EdmRelationshipAttribute("sakilaModel", "fk_film_language_original", "language", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VideoRentalService.language), "film", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoRentalService.film), true)]
[assembly: EdmRelationshipAttribute("sakilaModel", "fk_inventory_film", "film", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoRentalService.film), "inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoRentalService.inventory), true)]
[assembly: EdmRelationshipAttribute("sakilaModel", "fk_inventory_store", "store", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoRentalService.store), "inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoRentalService.inventory), true)]
[assembly: EdmRelationshipAttribute("sakilaModel", "fk_rental_inventory", "inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoRentalService.inventory), "rental", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoRentalService.rental), true)]
[assembly: EdmRelationshipAttribute("sakilaModel", "fk_payment_rental", "rental", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VideoRentalService.rental), "payment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoRentalService.payment), true)]
[assembly: EdmRelationshipAttribute("sakilaModel", "fk_payment_staff", "staff", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoRentalService.staff), "payment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoRentalService.payment), true)]
[assembly: EdmRelationshipAttribute("sakilaModel", "fk_rental_staff", "staff", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoRentalService.staff), "rental", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoRentalService.rental), true)]
[assembly: EdmRelationshipAttribute("sakilaModel", "fk_staff_store", "store", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoRentalService.store), "staff", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoRentalService.staff), true)]
[assembly: EdmRelationshipAttribute("sakilaModel", "fk_store_staff", "staff", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoRentalService.staff), "store", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoRentalService.store), true)]

#endregion

namespace VideoRentalService
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SakilaEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SakilaEntities object using the connection string found in the 'SakilaEntities' section of the application configuration file.
        /// </summary>
        public SakilaEntities() : base("name=SakilaEntities", "SakilaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SakilaEntities object.
        /// </summary>
        public SakilaEntities(string connectionString) : base(connectionString, "SakilaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SakilaEntities object.
        /// </summary>
        public SakilaEntities(EntityConnection connection) : base(connection, "SakilaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<actor> actors
        {
            get
            {
                if ((_actors == null))
                {
                    _actors = base.CreateObjectSet<actor>("actors");
                }
                return _actors;
            }
        }
        private ObjectSet<actor> _actors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<address> addresses
        {
            get
            {
                if ((_addresses == null))
                {
                    _addresses = base.CreateObjectSet<address>("addresses");
                }
                return _addresses;
            }
        }
        private ObjectSet<address> _addresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<category> categories
        {
            get
            {
                if ((_categories == null))
                {
                    _categories = base.CreateObjectSet<category>("categories");
                }
                return _categories;
            }
        }
        private ObjectSet<category> _categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<city> cities
        {
            get
            {
                if ((_cities == null))
                {
                    _cities = base.CreateObjectSet<city>("cities");
                }
                return _cities;
            }
        }
        private ObjectSet<city> _cities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<country> countries
        {
            get
            {
                if ((_countries == null))
                {
                    _countries = base.CreateObjectSet<country>("countries");
                }
                return _countries;
            }
        }
        private ObjectSet<country> _countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<customer> customers
        {
            get
            {
                if ((_customers == null))
                {
                    _customers = base.CreateObjectSet<customer>("customers");
                }
                return _customers;
            }
        }
        private ObjectSet<customer> _customers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<film> films
        {
            get
            {
                if ((_films == null))
                {
                    _films = base.CreateObjectSet<film>("films");
                }
                return _films;
            }
        }
        private ObjectSet<film> _films;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<film_actor> film_actor
        {
            get
            {
                if ((_film_actor == null))
                {
                    _film_actor = base.CreateObjectSet<film_actor>("film_actor");
                }
                return _film_actor;
            }
        }
        private ObjectSet<film_actor> _film_actor;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<film_category> film_category
        {
            get
            {
                if ((_film_category == null))
                {
                    _film_category = base.CreateObjectSet<film_category>("film_category");
                }
                return _film_category;
            }
        }
        private ObjectSet<film_category> _film_category;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<film_text> film_text
        {
            get
            {
                if ((_film_text == null))
                {
                    _film_text = base.CreateObjectSet<film_text>("film_text");
                }
                return _film_text;
            }
        }
        private ObjectSet<film_text> _film_text;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<inventory> inventories
        {
            get
            {
                if ((_inventories == null))
                {
                    _inventories = base.CreateObjectSet<inventory>("inventories");
                }
                return _inventories;
            }
        }
        private ObjectSet<inventory> _inventories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<language> languages
        {
            get
            {
                if ((_languages == null))
                {
                    _languages = base.CreateObjectSet<language>("languages");
                }
                return _languages;
            }
        }
        private ObjectSet<language> _languages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<payment> payments
        {
            get
            {
                if ((_payments == null))
                {
                    _payments = base.CreateObjectSet<payment>("payments");
                }
                return _payments;
            }
        }
        private ObjectSet<payment> _payments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<rental> rentals
        {
            get
            {
                if ((_rentals == null))
                {
                    _rentals = base.CreateObjectSet<rental>("rentals");
                }
                return _rentals;
            }
        }
        private ObjectSet<rental> _rentals;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<staff> staffs
        {
            get
            {
                if ((_staffs == null))
                {
                    _staffs = base.CreateObjectSet<staff>("staffs");
                }
                return _staffs;
            }
        }
        private ObjectSet<staff> _staffs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<store> stores
        {
            get
            {
                if ((_stores == null))
                {
                    _stores = base.CreateObjectSet<store>("stores");
                }
                return _stores;
            }
        }
        private ObjectSet<store> _stores;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sales_by_film_category> sales_by_film_category
        {
            get
            {
                if ((_sales_by_film_category == null))
                {
                    _sales_by_film_category = base.CreateObjectSet<sales_by_film_category>("sales_by_film_category");
                }
                return _sales_by_film_category;
            }
        }
        private ObjectSet<sales_by_film_category> _sales_by_film_category;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the actors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToactors(actor actor)
        {
            base.AddObject("actors", actor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the addresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaddresses(address address)
        {
            base.AddObject("addresses", address);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocategories(category category)
        {
            base.AddObject("categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the cities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocities(city city)
        {
            base.AddObject("cities", city);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocountries(country country)
        {
            base.AddObject("countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the customers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocustomers(customer customer)
        {
            base.AddObject("customers", customer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the films EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTofilms(film film)
        {
            base.AddObject("films", film);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the film_actor EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTofilm_actor(film_actor film_actor)
        {
            base.AddObject("film_actor", film_actor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the film_category EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTofilm_category(film_category film_category)
        {
            base.AddObject("film_category", film_category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the film_text EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTofilm_text(film_text film_text)
        {
            base.AddObject("film_text", film_text);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the inventories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToinventories(inventory inventory)
        {
            base.AddObject("inventories", inventory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the languages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTolanguages(language language)
        {
            base.AddObject("languages", language);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the payments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTopayments(payment payment)
        {
            base.AddObject("payments", payment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the rentals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorentals(rental rental)
        {
            base.AddObject("rentals", rental);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the staffs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTostaffs(staff staff)
        {
            base.AddObject("staffs", staff);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the stores EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTostores(store store)
        {
            base.AddObject("stores", store);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sales_by_film_category EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosales_by_film_category(sales_by_film_category sales_by_film_category)
        {
            base.AddObject("sales_by_film_category", sales_by_film_category);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="min_monthly_purchases">No Metadata Documentation available.</param>
        /// <param name="min_dollar_amount_purchased">No Metadata Documentation available.</param>
        /// <param name="count_rewardees">No Metadata Documentation available.</param>
        public ObjectResult<customer> GetRewardsReport(Nullable<global::System.SByte> min_monthly_purchases, Nullable<global::System.Decimal> min_dollar_amount_purchased, ObjectParameter count_rewardees)
        {
            ObjectParameter min_monthly_purchasesParameter;
            if (min_monthly_purchases.HasValue)
            {
                min_monthly_purchasesParameter = new ObjectParameter("min_monthly_purchases", min_monthly_purchases);
            }
            else
            {
                min_monthly_purchasesParameter = new ObjectParameter("min_monthly_purchases", typeof(global::System.SByte));
            }
    
            ObjectParameter min_dollar_amount_purchasedParameter;
            if (min_dollar_amount_purchased.HasValue)
            {
                min_dollar_amount_purchasedParameter = new ObjectParameter("min_dollar_amount_purchased", min_dollar_amount_purchased);
            }
            else
            {
                min_dollar_amount_purchasedParameter = new ObjectParameter("min_dollar_amount_purchased", typeof(global::System.Decimal));
            }
    
            return base.ExecuteFunction<customer>("GetRewardsReport", min_monthly_purchasesParameter, min_dollar_amount_purchasedParameter, count_rewardees);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="min_monthly_purchases">No Metadata Documentation available.</param>
        /// <param name="min_dollar_amount_purchased">No Metadata Documentation available.</param>
        /// <param name="count_rewardees">No Metadata Documentation available.</param>
        public ObjectResult<customer> GetRewardsReport(Nullable<global::System.SByte> min_monthly_purchases, Nullable<global::System.Decimal> min_dollar_amount_purchased, ObjectParameter count_rewardees, MergeOption mergeOption)
        {
            ObjectParameter min_monthly_purchasesParameter;
            if (min_monthly_purchases.HasValue)
            {
                min_monthly_purchasesParameter = new ObjectParameter("min_monthly_purchases", min_monthly_purchases);
            }
            else
            {
                min_monthly_purchasesParameter = new ObjectParameter("min_monthly_purchases", typeof(global::System.SByte));
            }
    
            ObjectParameter min_dollar_amount_purchasedParameter;
            if (min_dollar_amount_purchased.HasValue)
            {
                min_dollar_amount_purchasedParameter = new ObjectParameter("min_dollar_amount_purchased", min_dollar_amount_purchased);
            }
            else
            {
                min_dollar_amount_purchasedParameter = new ObjectParameter("min_dollar_amount_purchased", typeof(global::System.Decimal));
            }
    
            return base.ExecuteFunction<customer>("GetRewardsReport", mergeOption, min_monthly_purchasesParameter, min_dollar_amount_purchasedParameter, count_rewardees);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="sakilaModel", Name="actor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class actor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new actor object.
        /// </summary>
        /// <param name="actor_id">Initial value of the actor_id property.</param>
        /// <param name="first_name">Initial value of the first_name property.</param>
        /// <param name="last_name">Initial value of the last_name property.</param>
        /// <param name="last_update">Initial value of the last_update property.</param>
        public static actor Createactor(global::System.Int32 actor_id, global::System.String first_name, global::System.String last_name, global::System.DateTime last_update)
        {
            actor actor = new actor();
            actor.actor_id = actor_id;
            actor.first_name = first_name;
            actor.last_name = last_name;
            actor.last_update = last_update;
            return actor;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 actor_id
        {
            get
            {
                return _actor_id;
            }
            set
            {
                if (_actor_id != value)
                {
                    Onactor_idChanging(value);
                    ReportPropertyChanging("actor_id");
                    _actor_id = StructuralObject.SetValidValue(value, "actor_id");
                    ReportPropertyChanged("actor_id");
                    Onactor_idChanged();
                }
            }
        }
        private global::System.Int32 _actor_id;
        partial void Onactor_idChanging(global::System.Int32 value);
        partial void Onactor_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String first_name
        {
            get
            {
                return _first_name;
            }
            set
            {
                Onfirst_nameChanging(value);
                ReportPropertyChanging("first_name");
                _first_name = StructuralObject.SetValidValue(value, false, "first_name");
                ReportPropertyChanged("first_name");
                Onfirst_nameChanged();
            }
        }
        private global::System.String _first_name;
        partial void Onfirst_nameChanging(global::System.String value);
        partial void Onfirst_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String last_name
        {
            get
            {
                return _last_name;
            }
            set
            {
                Onlast_nameChanging(value);
                ReportPropertyChanging("last_name");
                _last_name = StructuralObject.SetValidValue(value, false, "last_name");
                ReportPropertyChanged("last_name");
                Onlast_nameChanged();
            }
        }
        private global::System.String _last_name;
        partial void Onlast_nameChanging(global::System.String value);
        partial void Onlast_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime last_update
        {
            get
            {
                return _last_update;
            }
            set
            {
                Onlast_updateChanging(value);
                ReportPropertyChanging("last_update");
                _last_update = StructuralObject.SetValidValue(value, "last_update");
                ReportPropertyChanged("last_update");
                Onlast_updateChanged();
            }
        }
        private global::System.DateTime _last_update;
        partial void Onlast_updateChanging(global::System.DateTime value);
        partial void Onlast_updateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_film_actor_actor", "film_actor")]
        public EntityCollection<film_actor> film_actor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<film_actor>("sakilaModel.fk_film_actor_actor", "film_actor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<film_actor>("sakilaModel.fk_film_actor_actor", "film_actor", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="sakilaModel", Name="address")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class address : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new address object.
        /// </summary>
        /// <param name="address_id">Initial value of the address_id property.</param>
        /// <param name="address1">Initial value of the address1 property.</param>
        /// <param name="district">Initial value of the district property.</param>
        /// <param name="city_id">Initial value of the city_id property.</param>
        /// <param name="phone">Initial value of the phone property.</param>
        /// <param name="last_update">Initial value of the last_update property.</param>
        public static address Createaddress(global::System.Int32 address_id, global::System.String address1, global::System.String district, global::System.Int32 city_id, global::System.String phone, global::System.DateTime last_update)
        {
            address address = new address();
            address.address_id = address_id;
            address.address1 = address1;
            address.district = district;
            address.city_id = city_id;
            address.phone = phone;
            address.last_update = last_update;
            return address;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 address_id
        {
            get
            {
                return _address_id;
            }
            set
            {
                if (_address_id != value)
                {
                    Onaddress_idChanging(value);
                    ReportPropertyChanging("address_id");
                    _address_id = StructuralObject.SetValidValue(value, "address_id");
                    ReportPropertyChanged("address_id");
                    Onaddress_idChanged();
                }
            }
        }
        private global::System.Int32 _address_id;
        partial void Onaddress_idChanging(global::System.Int32 value);
        partial void Onaddress_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String address1
        {
            get
            {
                return _address1;
            }
            set
            {
                Onaddress1Changing(value);
                ReportPropertyChanging("address1");
                _address1 = StructuralObject.SetValidValue(value, false, "address1");
                ReportPropertyChanged("address1");
                Onaddress1Changed();
            }
        }
        private global::System.String _address1;
        partial void Onaddress1Changing(global::System.String value);
        partial void Onaddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String address2
        {
            get
            {
                return _address2;
            }
            set
            {
                Onaddress2Changing(value);
                ReportPropertyChanging("address2");
                _address2 = StructuralObject.SetValidValue(value, true, "address2");
                ReportPropertyChanged("address2");
                Onaddress2Changed();
            }
        }
        private global::System.String _address2;
        partial void Onaddress2Changing(global::System.String value);
        partial void Onaddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String district
        {
            get
            {
                return _district;
            }
            set
            {
                OndistrictChanging(value);
                ReportPropertyChanging("district");
                _district = StructuralObject.SetValidValue(value, false, "district");
                ReportPropertyChanged("district");
                OndistrictChanged();
            }
        }
        private global::System.String _district;
        partial void OndistrictChanging(global::System.String value);
        partial void OndistrictChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 city_id
        {
            get
            {
                return _city_id;
            }
            set
            {
                Oncity_idChanging(value);
                ReportPropertyChanging("city_id");
                _city_id = StructuralObject.SetValidValue(value, "city_id");
                ReportPropertyChanged("city_id");
                Oncity_idChanged();
            }
        }
        private global::System.Int32 _city_id;
        partial void Oncity_idChanging(global::System.Int32 value);
        partial void Oncity_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String postal_code
        {
            get
            {
                return _postal_code;
            }
            set
            {
                Onpostal_codeChanging(value);
                ReportPropertyChanging("postal_code");
                _postal_code = StructuralObject.SetValidValue(value, true, "postal_code");
                ReportPropertyChanged("postal_code");
                Onpostal_codeChanged();
            }
        }
        private global::System.String _postal_code;
        partial void Onpostal_codeChanging(global::System.String value);
        partial void Onpostal_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String phone
        {
            get
            {
                return _phone;
            }
            set
            {
                OnphoneChanging(value);
                ReportPropertyChanging("phone");
                _phone = StructuralObject.SetValidValue(value, false, "phone");
                ReportPropertyChanged("phone");
                OnphoneChanged();
            }
        }
        private global::System.String _phone;
        partial void OnphoneChanging(global::System.String value);
        partial void OnphoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime last_update
        {
            get
            {
                return _last_update;
            }
            set
            {
                Onlast_updateChanging(value);
                ReportPropertyChanging("last_update");
                _last_update = StructuralObject.SetValidValue(value, "last_update");
                ReportPropertyChanged("last_update");
                Onlast_updateChanged();
            }
        }
        private global::System.DateTime _last_update;
        partial void Onlast_updateChanging(global::System.DateTime value);
        partial void Onlast_updateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_address_city", "city")]
        public city city
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<city>("sakilaModel.fk_address_city", "city").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<city>("sakilaModel.fk_address_city", "city").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<city> cityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<city>("sakilaModel.fk_address_city", "city");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<city>("sakilaModel.fk_address_city", "city", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_customer_address", "customer")]
        public EntityCollection<customer> customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<customer>("sakilaModel.fk_customer_address", "customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<customer>("sakilaModel.fk_customer_address", "customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_staff_address", "staff")]
        public EntityCollection<staff> staffs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<staff>("sakilaModel.fk_staff_address", "staff");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<staff>("sakilaModel.fk_staff_address", "staff", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_store_address", "store")]
        public EntityCollection<store> stores
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<store>("sakilaModel.fk_store_address", "store");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<store>("sakilaModel.fk_store_address", "store", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="sakilaModel", Name="category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new category object.
        /// </summary>
        /// <param name="category_id">Initial value of the category_id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="last_update">Initial value of the last_update property.</param>
        public static category Createcategory(global::System.Byte category_id, global::System.String name, global::System.DateTime last_update)
        {
            category category = new category();
            category.category_id = category_id;
            category.name = name;
            category.last_update = last_update;
            return category;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte category_id
        {
            get
            {
                return _category_id;
            }
            set
            {
                if (_category_id != value)
                {
                    Oncategory_idChanging(value);
                    ReportPropertyChanging("category_id");
                    _category_id = StructuralObject.SetValidValue(value, "category_id");
                    ReportPropertyChanged("category_id");
                    Oncategory_idChanged();
                }
            }
        }
        private global::System.Byte _category_id;
        partial void Oncategory_idChanging(global::System.Byte value);
        partial void Oncategory_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime last_update
        {
            get
            {
                return _last_update;
            }
            set
            {
                Onlast_updateChanging(value);
                ReportPropertyChanging("last_update");
                _last_update = StructuralObject.SetValidValue(value, "last_update");
                ReportPropertyChanged("last_update");
                Onlast_updateChanged();
            }
        }
        private global::System.DateTime _last_update;
        partial void Onlast_updateChanging(global::System.DateTime value);
        partial void Onlast_updateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_film_category_category", "film_category")]
        public EntityCollection<film_category> film_category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<film_category>("sakilaModel.fk_film_category_category", "film_category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<film_category>("sakilaModel.fk_film_category_category", "film_category", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="sakilaModel", Name="city")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class city : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new city object.
        /// </summary>
        /// <param name="city_id">Initial value of the city_id property.</param>
        /// <param name="city1">Initial value of the city1 property.</param>
        /// <param name="country_id">Initial value of the country_id property.</param>
        /// <param name="last_update">Initial value of the last_update property.</param>
        public static city Createcity(global::System.Int32 city_id, global::System.String city1, global::System.Int32 country_id, global::System.DateTime last_update)
        {
            city city = new city();
            city.city_id = city_id;
            city.city1 = city1;
            city.country_id = country_id;
            city.last_update = last_update;
            return city;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 city_id
        {
            get
            {
                return _city_id;
            }
            set
            {
                if (_city_id != value)
                {
                    Oncity_idChanging(value);
                    ReportPropertyChanging("city_id");
                    _city_id = StructuralObject.SetValidValue(value, "city_id");
                    ReportPropertyChanged("city_id");
                    Oncity_idChanged();
                }
            }
        }
        private global::System.Int32 _city_id;
        partial void Oncity_idChanging(global::System.Int32 value);
        partial void Oncity_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String city1
        {
            get
            {
                return _city1;
            }
            set
            {
                Oncity1Changing(value);
                ReportPropertyChanging("city1");
                _city1 = StructuralObject.SetValidValue(value, false, "city1");
                ReportPropertyChanged("city1");
                Oncity1Changed();
            }
        }
        private global::System.String _city1;
        partial void Oncity1Changing(global::System.String value);
        partial void Oncity1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 country_id
        {
            get
            {
                return _country_id;
            }
            set
            {
                Oncountry_idChanging(value);
                ReportPropertyChanging("country_id");
                _country_id = StructuralObject.SetValidValue(value, "country_id");
                ReportPropertyChanged("country_id");
                Oncountry_idChanged();
            }
        }
        private global::System.Int32 _country_id;
        partial void Oncountry_idChanging(global::System.Int32 value);
        partial void Oncountry_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime last_update
        {
            get
            {
                return _last_update;
            }
            set
            {
                Onlast_updateChanging(value);
                ReportPropertyChanging("last_update");
                _last_update = StructuralObject.SetValidValue(value, "last_update");
                ReportPropertyChanged("last_update");
                Onlast_updateChanged();
            }
        }
        private global::System.DateTime _last_update;
        partial void Onlast_updateChanging(global::System.DateTime value);
        partial void Onlast_updateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_address_city", "address")]
        public EntityCollection<address> addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<address>("sakilaModel.fk_address_city", "address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<address>("sakilaModel.fk_address_city", "address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_city_country", "country")]
        public country country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<country>("sakilaModel.fk_city_country", "country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<country>("sakilaModel.fk_city_country", "country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<country> countryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<country>("sakilaModel.fk_city_country", "country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<country>("sakilaModel.fk_city_country", "country", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="sakilaModel", Name="country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new country object.
        /// </summary>
        /// <param name="country_id">Initial value of the country_id property.</param>
        /// <param name="country1">Initial value of the country1 property.</param>
        /// <param name="last_update">Initial value of the last_update property.</param>
        public static country Createcountry(global::System.Int32 country_id, global::System.String country1, global::System.DateTime last_update)
        {
            country country = new country();
            country.country_id = country_id;
            country.country1 = country1;
            country.last_update = last_update;
            return country;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 country_id
        {
            get
            {
                return _country_id;
            }
            set
            {
                if (_country_id != value)
                {
                    Oncountry_idChanging(value);
                    ReportPropertyChanging("country_id");
                    _country_id = StructuralObject.SetValidValue(value, "country_id");
                    ReportPropertyChanged("country_id");
                    Oncountry_idChanged();
                }
            }
        }
        private global::System.Int32 _country_id;
        partial void Oncountry_idChanging(global::System.Int32 value);
        partial void Oncountry_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String country1
        {
            get
            {
                return _country1;
            }
            set
            {
                Oncountry1Changing(value);
                ReportPropertyChanging("country1");
                _country1 = StructuralObject.SetValidValue(value, false, "country1");
                ReportPropertyChanged("country1");
                Oncountry1Changed();
            }
        }
        private global::System.String _country1;
        partial void Oncountry1Changing(global::System.String value);
        partial void Oncountry1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime last_update
        {
            get
            {
                return _last_update;
            }
            set
            {
                Onlast_updateChanging(value);
                ReportPropertyChanging("last_update");
                _last_update = StructuralObject.SetValidValue(value, "last_update");
                ReportPropertyChanged("last_update");
                Onlast_updateChanged();
            }
        }
        private global::System.DateTime _last_update;
        partial void Onlast_updateChanging(global::System.DateTime value);
        partial void Onlast_updateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_city_country", "city")]
        public EntityCollection<city> cities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<city>("sakilaModel.fk_city_country", "city");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<city>("sakilaModel.fk_city_country", "city", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="sakilaModel", Name="customer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class customer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new customer object.
        /// </summary>
        /// <param name="customer_id">Initial value of the customer_id property.</param>
        /// <param name="store_id">Initial value of the store_id property.</param>
        /// <param name="first_name">Initial value of the first_name property.</param>
        /// <param name="last_name">Initial value of the last_name property.</param>
        /// <param name="address_id">Initial value of the address_id property.</param>
        /// <param name="active">Initial value of the active property.</param>
        /// <param name="create_date">Initial value of the create_date property.</param>
        /// <param name="last_update">Initial value of the last_update property.</param>
        public static customer Createcustomer(global::System.Int32 customer_id, global::System.Byte store_id, global::System.String first_name, global::System.String last_name, global::System.Int32 address_id, global::System.Boolean active, global::System.DateTime create_date, global::System.DateTime last_update)
        {
            customer customer = new customer();
            customer.customer_id = customer_id;
            customer.store_id = store_id;
            customer.first_name = first_name;
            customer.last_name = last_name;
            customer.address_id = address_id;
            customer.active = active;
            customer.create_date = create_date;
            customer.last_update = last_update;
            return customer;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 customer_id
        {
            get
            {
                return _customer_id;
            }
            set
            {
                if (_customer_id != value)
                {
                    Oncustomer_idChanging(value);
                    ReportPropertyChanging("customer_id");
                    _customer_id = StructuralObject.SetValidValue(value, "customer_id");
                    ReportPropertyChanged("customer_id");
                    Oncustomer_idChanged();
                }
            }
        }
        private global::System.Int32 _customer_id;
        partial void Oncustomer_idChanging(global::System.Int32 value);
        partial void Oncustomer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte store_id
        {
            get
            {
                return _store_id;
            }
            set
            {
                Onstore_idChanging(value);
                ReportPropertyChanging("store_id");
                _store_id = StructuralObject.SetValidValue(value, "store_id");
                ReportPropertyChanged("store_id");
                Onstore_idChanged();
            }
        }
        private global::System.Byte _store_id;
        partial void Onstore_idChanging(global::System.Byte value);
        partial void Onstore_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String first_name
        {
            get
            {
                return _first_name;
            }
            set
            {
                Onfirst_nameChanging(value);
                ReportPropertyChanging("first_name");
                _first_name = StructuralObject.SetValidValue(value, false, "first_name");
                ReportPropertyChanged("first_name");
                Onfirst_nameChanged();
            }
        }
        private global::System.String _first_name;
        partial void Onfirst_nameChanging(global::System.String value);
        partial void Onfirst_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String last_name
        {
            get
            {
                return _last_name;
            }
            set
            {
                Onlast_nameChanging(value);
                ReportPropertyChanging("last_name");
                _last_name = StructuralObject.SetValidValue(value, false, "last_name");
                ReportPropertyChanged("last_name");
                Onlast_nameChanged();
            }
        }
        private global::System.String _last_name;
        partial void Onlast_nameChanging(global::System.String value);
        partial void Onlast_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, true, "email");
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 address_id
        {
            get
            {
                return _address_id;
            }
            set
            {
                Onaddress_idChanging(value);
                ReportPropertyChanging("address_id");
                _address_id = StructuralObject.SetValidValue(value, "address_id");
                ReportPropertyChanged("address_id");
                Onaddress_idChanged();
            }
        }
        private global::System.Int32 _address_id;
        partial void Onaddress_idChanging(global::System.Int32 value);
        partial void Onaddress_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean active
        {
            get
            {
                return _active;
            }
            set
            {
                OnactiveChanging(value);
                ReportPropertyChanging("active");
                _active = StructuralObject.SetValidValue(value, "active");
                ReportPropertyChanged("active");
                OnactiveChanged();
            }
        }
        private global::System.Boolean _active;
        partial void OnactiveChanging(global::System.Boolean value);
        partial void OnactiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime create_date
        {
            get
            {
                return _create_date;
            }
            set
            {
                Oncreate_dateChanging(value);
                ReportPropertyChanging("create_date");
                _create_date = StructuralObject.SetValidValue(value, "create_date");
                ReportPropertyChanged("create_date");
                Oncreate_dateChanged();
            }
        }
        private global::System.DateTime _create_date;
        partial void Oncreate_dateChanging(global::System.DateTime value);
        partial void Oncreate_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime last_update
        {
            get
            {
                return _last_update;
            }
            set
            {
                Onlast_updateChanging(value);
                ReportPropertyChanging("last_update");
                _last_update = StructuralObject.SetValidValue(value, "last_update");
                ReportPropertyChanged("last_update");
                Onlast_updateChanged();
            }
        }
        private global::System.DateTime _last_update;
        partial void Onlast_updateChanging(global::System.DateTime value);
        partial void Onlast_updateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_customer_address", "address")]
        public address address
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<address>("sakilaModel.fk_customer_address", "address").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<address>("sakilaModel.fk_customer_address", "address").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<address> addressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<address>("sakilaModel.fk_customer_address", "address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<address>("sakilaModel.fk_customer_address", "address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_customer_store", "store")]
        public store store
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<store>("sakilaModel.fk_customer_store", "store").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<store>("sakilaModel.fk_customer_store", "store").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<store> storeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<store>("sakilaModel.fk_customer_store", "store");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<store>("sakilaModel.fk_customer_store", "store", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_payment_customer", "payment")]
        public EntityCollection<payment> payments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<payment>("sakilaModel.fk_payment_customer", "payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<payment>("sakilaModel.fk_payment_customer", "payment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_rental_customer", "rental")]
        public EntityCollection<rental> rentals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<rental>("sakilaModel.fk_rental_customer", "rental");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<rental>("sakilaModel.fk_rental_customer", "rental", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="sakilaModel", Name="film")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class film : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new film object.
        /// </summary>
        /// <param name="film_id">Initial value of the film_id property.</param>
        /// <param name="title">Initial value of the title property.</param>
        /// <param name="language_id">Initial value of the language_id property.</param>
        /// <param name="rental_duration">Initial value of the rental_duration property.</param>
        /// <param name="rental_rate">Initial value of the rental_rate property.</param>
        /// <param name="replacement_cost">Initial value of the replacement_cost property.</param>
        /// <param name="last_update">Initial value of the last_update property.</param>
        public static film Createfilm(global::System.Int32 film_id, global::System.String title, global::System.Byte language_id, global::System.Byte rental_duration, global::System.Decimal rental_rate, global::System.Decimal replacement_cost, global::System.DateTime last_update)
        {
            film film = new film();
            film.film_id = film_id;
            film.title = title;
            film.language_id = language_id;
            film.rental_duration = rental_duration;
            film.rental_rate = rental_rate;
            film.replacement_cost = replacement_cost;
            film.last_update = last_update;
            return film;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 film_id
        {
            get
            {
                return _film_id;
            }
            set
            {
                if (_film_id != value)
                {
                    Onfilm_idChanging(value);
                    ReportPropertyChanging("film_id");
                    _film_id = StructuralObject.SetValidValue(value, "film_id");
                    ReportPropertyChanged("film_id");
                    Onfilm_idChanged();
                }
            }
        }
        private global::System.Int32 _film_id;
        partial void Onfilm_idChanging(global::System.Int32 value);
        partial void Onfilm_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String title
        {
            get
            {
                return _title;
            }
            set
            {
                OntitleChanging(value);
                ReportPropertyChanging("title");
                _title = StructuralObject.SetValidValue(value, false, "title");
                ReportPropertyChanged("title");
                OntitleChanged();
            }
        }
        private global::System.String _title;
        partial void OntitleChanging(global::System.String value);
        partial void OntitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true, "description");
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> release_year
        {
            get
            {
                return _release_year;
            }
            set
            {
                Onrelease_yearChanging(value);
                ReportPropertyChanging("release_year");
                _release_year = StructuralObject.SetValidValue(value, "release_year");
                ReportPropertyChanged("release_year");
                Onrelease_yearChanged();
            }
        }
        private Nullable<global::System.Int16> _release_year;
        partial void Onrelease_yearChanging(Nullable<global::System.Int16> value);
        partial void Onrelease_yearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte language_id
        {
            get
            {
                return _language_id;
            }
            set
            {
                Onlanguage_idChanging(value);
                ReportPropertyChanging("language_id");
                _language_id = StructuralObject.SetValidValue(value, "language_id");
                ReportPropertyChanged("language_id");
                Onlanguage_idChanged();
            }
        }
        private global::System.Byte _language_id;
        partial void Onlanguage_idChanging(global::System.Byte value);
        partial void Onlanguage_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> original_language_id
        {
            get
            {
                return _original_language_id;
            }
            set
            {
                Onoriginal_language_idChanging(value);
                ReportPropertyChanging("original_language_id");
                _original_language_id = StructuralObject.SetValidValue(value, "original_language_id");
                ReportPropertyChanged("original_language_id");
                Onoriginal_language_idChanged();
            }
        }
        private Nullable<global::System.Byte> _original_language_id;
        partial void Onoriginal_language_idChanging(Nullable<global::System.Byte> value);
        partial void Onoriginal_language_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte rental_duration
        {
            get
            {
                return _rental_duration;
            }
            set
            {
                Onrental_durationChanging(value);
                ReportPropertyChanging("rental_duration");
                _rental_duration = StructuralObject.SetValidValue(value, "rental_duration");
                ReportPropertyChanged("rental_duration");
                Onrental_durationChanged();
            }
        }
        private global::System.Byte _rental_duration;
        partial void Onrental_durationChanging(global::System.Byte value);
        partial void Onrental_durationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal rental_rate
        {
            get
            {
                return _rental_rate;
            }
            set
            {
                Onrental_rateChanging(value);
                ReportPropertyChanging("rental_rate");
                _rental_rate = StructuralObject.SetValidValue(value, "rental_rate");
                ReportPropertyChanged("rental_rate");
                Onrental_rateChanged();
            }
        }
        private global::System.Decimal _rental_rate;
        partial void Onrental_rateChanging(global::System.Decimal value);
        partial void Onrental_rateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> length
        {
            get
            {
                return _length;
            }
            set
            {
                OnlengthChanging(value);
                ReportPropertyChanging("length");
                _length = StructuralObject.SetValidValue(value, "length");
                ReportPropertyChanged("length");
                OnlengthChanged();
            }
        }
        private Nullable<global::System.Int32> _length;
        partial void OnlengthChanging(Nullable<global::System.Int32> value);
        partial void OnlengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal replacement_cost
        {
            get
            {
                return _replacement_cost;
            }
            set
            {
                Onreplacement_costChanging(value);
                ReportPropertyChanging("replacement_cost");
                _replacement_cost = StructuralObject.SetValidValue(value, "replacement_cost");
                ReportPropertyChanged("replacement_cost");
                Onreplacement_costChanged();
            }
        }
        private global::System.Decimal _replacement_cost;
        partial void Onreplacement_costChanging(global::System.Decimal value);
        partial void Onreplacement_costChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String rating
        {
            get
            {
                return _rating;
            }
            set
            {
                OnratingChanging(value);
                ReportPropertyChanging("rating");
                _rating = StructuralObject.SetValidValue(value, true, "rating");
                ReportPropertyChanged("rating");
                OnratingChanged();
            }
        }
        private global::System.String _rating;
        partial void OnratingChanging(global::System.String value);
        partial void OnratingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String special_features
        {
            get
            {
                return _special_features;
            }
            set
            {
                Onspecial_featuresChanging(value);
                ReportPropertyChanging("special_features");
                _special_features = StructuralObject.SetValidValue(value, true, "special_features");
                ReportPropertyChanged("special_features");
                Onspecial_featuresChanged();
            }
        }
        private global::System.String _special_features;
        partial void Onspecial_featuresChanging(global::System.String value);
        partial void Onspecial_featuresChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime last_update
        {
            get
            {
                return _last_update;
            }
            set
            {
                Onlast_updateChanging(value);
                ReportPropertyChanging("last_update");
                _last_update = StructuralObject.SetValidValue(value, "last_update");
                ReportPropertyChanged("last_update");
                Onlast_updateChanged();
            }
        }
        private global::System.DateTime _last_update;
        partial void Onlast_updateChanging(global::System.DateTime value);
        partial void Onlast_updateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_film_actor_film", "film_actor")]
        public EntityCollection<film_actor> film_actor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<film_actor>("sakilaModel.fk_film_actor_film", "film_actor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<film_actor>("sakilaModel.fk_film_actor_film", "film_actor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_film_category_film", "film_category")]
        public EntityCollection<film_category> film_category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<film_category>("sakilaModel.fk_film_category_film", "film_category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<film_category>("sakilaModel.fk_film_category_film", "film_category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_film_language", "language")]
        public language language
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<language>("sakilaModel.fk_film_language", "language").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<language>("sakilaModel.fk_film_language", "language").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<language> languageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<language>("sakilaModel.fk_film_language", "language");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<language>("sakilaModel.fk_film_language", "language", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_film_language_original", "language")]
        public language language1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<language>("sakilaModel.fk_film_language_original", "language").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<language>("sakilaModel.fk_film_language_original", "language").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<language> language1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<language>("sakilaModel.fk_film_language_original", "language");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<language>("sakilaModel.fk_film_language_original", "language", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_inventory_film", "inventory")]
        public EntityCollection<inventory> inventories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<inventory>("sakilaModel.fk_inventory_film", "inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<inventory>("sakilaModel.fk_inventory_film", "inventory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="sakilaModel", Name="film_actor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class film_actor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new film_actor object.
        /// </summary>
        /// <param name="actor_id">Initial value of the actor_id property.</param>
        /// <param name="film_id">Initial value of the film_id property.</param>
        /// <param name="last_update">Initial value of the last_update property.</param>
        public static film_actor Createfilm_actor(global::System.Int32 actor_id, global::System.Int32 film_id, global::System.DateTime last_update)
        {
            film_actor film_actor = new film_actor();
            film_actor.actor_id = actor_id;
            film_actor.film_id = film_id;
            film_actor.last_update = last_update;
            return film_actor;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 actor_id
        {
            get
            {
                return _actor_id;
            }
            set
            {
                if (_actor_id != value)
                {
                    Onactor_idChanging(value);
                    ReportPropertyChanging("actor_id");
                    _actor_id = StructuralObject.SetValidValue(value, "actor_id");
                    ReportPropertyChanged("actor_id");
                    Onactor_idChanged();
                }
            }
        }
        private global::System.Int32 _actor_id;
        partial void Onactor_idChanging(global::System.Int32 value);
        partial void Onactor_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 film_id
        {
            get
            {
                return _film_id;
            }
            set
            {
                if (_film_id != value)
                {
                    Onfilm_idChanging(value);
                    ReportPropertyChanging("film_id");
                    _film_id = StructuralObject.SetValidValue(value, "film_id");
                    ReportPropertyChanged("film_id");
                    Onfilm_idChanged();
                }
            }
        }
        private global::System.Int32 _film_id;
        partial void Onfilm_idChanging(global::System.Int32 value);
        partial void Onfilm_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime last_update
        {
            get
            {
                return _last_update;
            }
            set
            {
                Onlast_updateChanging(value);
                ReportPropertyChanging("last_update");
                _last_update = StructuralObject.SetValidValue(value, "last_update");
                ReportPropertyChanged("last_update");
                Onlast_updateChanged();
            }
        }
        private global::System.DateTime _last_update;
        partial void Onlast_updateChanging(global::System.DateTime value);
        partial void Onlast_updateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_film_actor_actor", "actor")]
        public actor actor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<actor>("sakilaModel.fk_film_actor_actor", "actor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<actor>("sakilaModel.fk_film_actor_actor", "actor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<actor> actorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<actor>("sakilaModel.fk_film_actor_actor", "actor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<actor>("sakilaModel.fk_film_actor_actor", "actor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_film_actor_film", "film")]
        public film film
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<film>("sakilaModel.fk_film_actor_film", "film").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<film>("sakilaModel.fk_film_actor_film", "film").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<film> filmReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<film>("sakilaModel.fk_film_actor_film", "film");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<film>("sakilaModel.fk_film_actor_film", "film", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="sakilaModel", Name="film_category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class film_category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new film_category object.
        /// </summary>
        /// <param name="film_id">Initial value of the film_id property.</param>
        /// <param name="category_id">Initial value of the category_id property.</param>
        /// <param name="last_update">Initial value of the last_update property.</param>
        public static film_category Createfilm_category(global::System.Int32 film_id, global::System.Byte category_id, global::System.DateTime last_update)
        {
            film_category film_category = new film_category();
            film_category.film_id = film_id;
            film_category.category_id = category_id;
            film_category.last_update = last_update;
            return film_category;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 film_id
        {
            get
            {
                return _film_id;
            }
            set
            {
                if (_film_id != value)
                {
                    Onfilm_idChanging(value);
                    ReportPropertyChanging("film_id");
                    _film_id = StructuralObject.SetValidValue(value, "film_id");
                    ReportPropertyChanged("film_id");
                    Onfilm_idChanged();
                }
            }
        }
        private global::System.Int32 _film_id;
        partial void Onfilm_idChanging(global::System.Int32 value);
        partial void Onfilm_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte category_id
        {
            get
            {
                return _category_id;
            }
            set
            {
                if (_category_id != value)
                {
                    Oncategory_idChanging(value);
                    ReportPropertyChanging("category_id");
                    _category_id = StructuralObject.SetValidValue(value, "category_id");
                    ReportPropertyChanged("category_id");
                    Oncategory_idChanged();
                }
            }
        }
        private global::System.Byte _category_id;
        partial void Oncategory_idChanging(global::System.Byte value);
        partial void Oncategory_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime last_update
        {
            get
            {
                return _last_update;
            }
            set
            {
                Onlast_updateChanging(value);
                ReportPropertyChanging("last_update");
                _last_update = StructuralObject.SetValidValue(value, "last_update");
                ReportPropertyChanged("last_update");
                Onlast_updateChanged();
            }
        }
        private global::System.DateTime _last_update;
        partial void Onlast_updateChanging(global::System.DateTime value);
        partial void Onlast_updateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_film_category_category", "category")]
        public category category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<category>("sakilaModel.fk_film_category_category", "category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<category>("sakilaModel.fk_film_category_category", "category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<category> categoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<category>("sakilaModel.fk_film_category_category", "category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<category>("sakilaModel.fk_film_category_category", "category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_film_category_film", "film")]
        public film film
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<film>("sakilaModel.fk_film_category_film", "film").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<film>("sakilaModel.fk_film_category_film", "film").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<film> filmReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<film>("sakilaModel.fk_film_category_film", "film");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<film>("sakilaModel.fk_film_category_film", "film", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="sakilaModel", Name="film_text")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class film_text : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new film_text object.
        /// </summary>
        /// <param name="film_id">Initial value of the film_id property.</param>
        /// <param name="title">Initial value of the title property.</param>
        public static film_text Createfilm_text(global::System.Int16 film_id, global::System.String title)
        {
            film_text film_text = new film_text();
            film_text.film_id = film_id;
            film_text.title = title;
            return film_text;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 film_id
        {
            get
            {
                return _film_id;
            }
            set
            {
                if (_film_id != value)
                {
                    Onfilm_idChanging(value);
                    ReportPropertyChanging("film_id");
                    _film_id = StructuralObject.SetValidValue(value, "film_id");
                    ReportPropertyChanged("film_id");
                    Onfilm_idChanged();
                }
            }
        }
        private global::System.Int16 _film_id;
        partial void Onfilm_idChanging(global::System.Int16 value);
        partial void Onfilm_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String title
        {
            get
            {
                return _title;
            }
            set
            {
                OntitleChanging(value);
                ReportPropertyChanging("title");
                _title = StructuralObject.SetValidValue(value, false, "title");
                ReportPropertyChanged("title");
                OntitleChanged();
            }
        }
        private global::System.String _title;
        partial void OntitleChanging(global::System.String value);
        partial void OntitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true, "description");
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="sakilaModel", Name="inventory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class inventory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new inventory object.
        /// </summary>
        /// <param name="inventory_id">Initial value of the inventory_id property.</param>
        /// <param name="film_id">Initial value of the film_id property.</param>
        /// <param name="store_id">Initial value of the store_id property.</param>
        /// <param name="last_update">Initial value of the last_update property.</param>
        public static inventory Createinventory(global::System.Int32 inventory_id, global::System.Int32 film_id, global::System.Byte store_id, global::System.DateTime last_update)
        {
            inventory inventory = new inventory();
            inventory.inventory_id = inventory_id;
            inventory.film_id = film_id;
            inventory.store_id = store_id;
            inventory.last_update = last_update;
            return inventory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 inventory_id
        {
            get
            {
                return _inventory_id;
            }
            set
            {
                if (_inventory_id != value)
                {
                    Oninventory_idChanging(value);
                    ReportPropertyChanging("inventory_id");
                    _inventory_id = StructuralObject.SetValidValue(value, "inventory_id");
                    ReportPropertyChanged("inventory_id");
                    Oninventory_idChanged();
                }
            }
        }
        private global::System.Int32 _inventory_id;
        partial void Oninventory_idChanging(global::System.Int32 value);
        partial void Oninventory_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 film_id
        {
            get
            {
                return _film_id;
            }
            set
            {
                Onfilm_idChanging(value);
                ReportPropertyChanging("film_id");
                _film_id = StructuralObject.SetValidValue(value, "film_id");
                ReportPropertyChanged("film_id");
                Onfilm_idChanged();
            }
        }
        private global::System.Int32 _film_id;
        partial void Onfilm_idChanging(global::System.Int32 value);
        partial void Onfilm_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte store_id
        {
            get
            {
                return _store_id;
            }
            set
            {
                Onstore_idChanging(value);
                ReportPropertyChanging("store_id");
                _store_id = StructuralObject.SetValidValue(value, "store_id");
                ReportPropertyChanged("store_id");
                Onstore_idChanged();
            }
        }
        private global::System.Byte _store_id;
        partial void Onstore_idChanging(global::System.Byte value);
        partial void Onstore_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime last_update
        {
            get
            {
                return _last_update;
            }
            set
            {
                Onlast_updateChanging(value);
                ReportPropertyChanging("last_update");
                _last_update = StructuralObject.SetValidValue(value, "last_update");
                ReportPropertyChanged("last_update");
                Onlast_updateChanged();
            }
        }
        private global::System.DateTime _last_update;
        partial void Onlast_updateChanging(global::System.DateTime value);
        partial void Onlast_updateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_inventory_film", "film")]
        public film film
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<film>("sakilaModel.fk_inventory_film", "film").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<film>("sakilaModel.fk_inventory_film", "film").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<film> filmReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<film>("sakilaModel.fk_inventory_film", "film");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<film>("sakilaModel.fk_inventory_film", "film", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_inventory_store", "store")]
        public store store
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<store>("sakilaModel.fk_inventory_store", "store").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<store>("sakilaModel.fk_inventory_store", "store").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<store> storeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<store>("sakilaModel.fk_inventory_store", "store");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<store>("sakilaModel.fk_inventory_store", "store", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_rental_inventory", "rental")]
        public EntityCollection<rental> rentals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<rental>("sakilaModel.fk_rental_inventory", "rental");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<rental>("sakilaModel.fk_rental_inventory", "rental", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="sakilaModel", Name="language")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class language : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new language object.
        /// </summary>
        /// <param name="language_id">Initial value of the language_id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="last_update">Initial value of the last_update property.</param>
        public static language Createlanguage(global::System.Byte language_id, global::System.String name, global::System.DateTime last_update)
        {
            language language = new language();
            language.language_id = language_id;
            language.name = name;
            language.last_update = last_update;
            return language;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte language_id
        {
            get
            {
                return _language_id;
            }
            set
            {
                if (_language_id != value)
                {
                    Onlanguage_idChanging(value);
                    ReportPropertyChanging("language_id");
                    _language_id = StructuralObject.SetValidValue(value, "language_id");
                    ReportPropertyChanged("language_id");
                    Onlanguage_idChanged();
                }
            }
        }
        private global::System.Byte _language_id;
        partial void Onlanguage_idChanging(global::System.Byte value);
        partial void Onlanguage_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime last_update
        {
            get
            {
                return _last_update;
            }
            set
            {
                Onlast_updateChanging(value);
                ReportPropertyChanging("last_update");
                _last_update = StructuralObject.SetValidValue(value, "last_update");
                ReportPropertyChanged("last_update");
                Onlast_updateChanged();
            }
        }
        private global::System.DateTime _last_update;
        partial void Onlast_updateChanging(global::System.DateTime value);
        partial void Onlast_updateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_film_language", "film")]
        public EntityCollection<film> films
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<film>("sakilaModel.fk_film_language", "film");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<film>("sakilaModel.fk_film_language", "film", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_film_language_original", "film")]
        public EntityCollection<film> films1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<film>("sakilaModel.fk_film_language_original", "film");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<film>("sakilaModel.fk_film_language_original", "film", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="sakilaModel", Name="payment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class payment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new payment object.
        /// </summary>
        /// <param name="payment_id">Initial value of the payment_id property.</param>
        /// <param name="customer_id">Initial value of the customer_id property.</param>
        /// <param name="staff_id">Initial value of the staff_id property.</param>
        /// <param name="amount">Initial value of the amount property.</param>
        /// <param name="payment_date">Initial value of the payment_date property.</param>
        /// <param name="last_update">Initial value of the last_update property.</param>
        public static payment Createpayment(global::System.Int32 payment_id, global::System.Int32 customer_id, global::System.Byte staff_id, global::System.Decimal amount, global::System.DateTime payment_date, global::System.DateTime last_update)
        {
            payment payment = new payment();
            payment.payment_id = payment_id;
            payment.customer_id = customer_id;
            payment.staff_id = staff_id;
            payment.amount = amount;
            payment.payment_date = payment_date;
            payment.last_update = last_update;
            return payment;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 payment_id
        {
            get
            {
                return _payment_id;
            }
            set
            {
                if (_payment_id != value)
                {
                    Onpayment_idChanging(value);
                    ReportPropertyChanging("payment_id");
                    _payment_id = StructuralObject.SetValidValue(value, "payment_id");
                    ReportPropertyChanged("payment_id");
                    Onpayment_idChanged();
                }
            }
        }
        private global::System.Int32 _payment_id;
        partial void Onpayment_idChanging(global::System.Int32 value);
        partial void Onpayment_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 customer_id
        {
            get
            {
                return _customer_id;
            }
            set
            {
                Oncustomer_idChanging(value);
                ReportPropertyChanging("customer_id");
                _customer_id = StructuralObject.SetValidValue(value, "customer_id");
                ReportPropertyChanged("customer_id");
                Oncustomer_idChanged();
            }
        }
        private global::System.Int32 _customer_id;
        partial void Oncustomer_idChanging(global::System.Int32 value);
        partial void Oncustomer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte staff_id
        {
            get
            {
                return _staff_id;
            }
            set
            {
                Onstaff_idChanging(value);
                ReportPropertyChanging("staff_id");
                _staff_id = StructuralObject.SetValidValue(value, "staff_id");
                ReportPropertyChanged("staff_id");
                Onstaff_idChanged();
            }
        }
        private global::System.Byte _staff_id;
        partial void Onstaff_idChanging(global::System.Byte value);
        partial void Onstaff_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> rental_id
        {
            get
            {
                return _rental_id;
            }
            set
            {
                Onrental_idChanging(value);
                ReportPropertyChanging("rental_id");
                _rental_id = StructuralObject.SetValidValue(value, "rental_id");
                ReportPropertyChanged("rental_id");
                Onrental_idChanged();
            }
        }
        private Nullable<global::System.Int32> _rental_id;
        partial void Onrental_idChanging(Nullable<global::System.Int32> value);
        partial void Onrental_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal amount
        {
            get
            {
                return _amount;
            }
            set
            {
                OnamountChanging(value);
                ReportPropertyChanging("amount");
                _amount = StructuralObject.SetValidValue(value, "amount");
                ReportPropertyChanged("amount");
                OnamountChanged();
            }
        }
        private global::System.Decimal _amount;
        partial void OnamountChanging(global::System.Decimal value);
        partial void OnamountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime payment_date
        {
            get
            {
                return _payment_date;
            }
            set
            {
                Onpayment_dateChanging(value);
                ReportPropertyChanging("payment_date");
                _payment_date = StructuralObject.SetValidValue(value, "payment_date");
                ReportPropertyChanged("payment_date");
                Onpayment_dateChanged();
            }
        }
        private global::System.DateTime _payment_date;
        partial void Onpayment_dateChanging(global::System.DateTime value);
        partial void Onpayment_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime last_update
        {
            get
            {
                return _last_update;
            }
            set
            {
                Onlast_updateChanging(value);
                ReportPropertyChanging("last_update");
                _last_update = StructuralObject.SetValidValue(value, "last_update");
                ReportPropertyChanged("last_update");
                Onlast_updateChanged();
            }
        }
        private global::System.DateTime _last_update;
        partial void Onlast_updateChanging(global::System.DateTime value);
        partial void Onlast_updateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_payment_customer", "customer")]
        public customer customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<customer>("sakilaModel.fk_payment_customer", "customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<customer>("sakilaModel.fk_payment_customer", "customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<customer> customerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<customer>("sakilaModel.fk_payment_customer", "customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<customer>("sakilaModel.fk_payment_customer", "customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_payment_rental", "rental")]
        public rental rental
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<rental>("sakilaModel.fk_payment_rental", "rental").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<rental>("sakilaModel.fk_payment_rental", "rental").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<rental> rentalReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<rental>("sakilaModel.fk_payment_rental", "rental");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<rental>("sakilaModel.fk_payment_rental", "rental", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_payment_staff", "staff")]
        public staff staff
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<staff>("sakilaModel.fk_payment_staff", "staff").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<staff>("sakilaModel.fk_payment_staff", "staff").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<staff> staffReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<staff>("sakilaModel.fk_payment_staff", "staff");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<staff>("sakilaModel.fk_payment_staff", "staff", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="sakilaModel", Name="rental")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class rental : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new rental object.
        /// </summary>
        /// <param name="rental_id">Initial value of the rental_id property.</param>
        /// <param name="rental_date">Initial value of the rental_date property.</param>
        /// <param name="inventory_id">Initial value of the inventory_id property.</param>
        /// <param name="customer_id">Initial value of the customer_id property.</param>
        /// <param name="staff_id">Initial value of the staff_id property.</param>
        /// <param name="last_update">Initial value of the last_update property.</param>
        public static rental Createrental(global::System.Int32 rental_id, global::System.DateTime rental_date, global::System.Int32 inventory_id, global::System.Int32 customer_id, global::System.Byte staff_id, global::System.DateTime last_update)
        {
            rental rental = new rental();
            rental.rental_id = rental_id;
            rental.rental_date = rental_date;
            rental.inventory_id = inventory_id;
            rental.customer_id = customer_id;
            rental.staff_id = staff_id;
            rental.last_update = last_update;
            return rental;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 rental_id
        {
            get
            {
                return _rental_id;
            }
            set
            {
                if (_rental_id != value)
                {
                    Onrental_idChanging(value);
                    ReportPropertyChanging("rental_id");
                    _rental_id = StructuralObject.SetValidValue(value, "rental_id");
                    ReportPropertyChanged("rental_id");
                    Onrental_idChanged();
                }
            }
        }
        private global::System.Int32 _rental_id;
        partial void Onrental_idChanging(global::System.Int32 value);
        partial void Onrental_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime rental_date
        {
            get
            {
                return _rental_date;
            }
            set
            {
                Onrental_dateChanging(value);
                ReportPropertyChanging("rental_date");
                _rental_date = StructuralObject.SetValidValue(value, "rental_date");
                ReportPropertyChanged("rental_date");
                Onrental_dateChanged();
            }
        }
        private global::System.DateTime _rental_date;
        partial void Onrental_dateChanging(global::System.DateTime value);
        partial void Onrental_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 inventory_id
        {
            get
            {
                return _inventory_id;
            }
            set
            {
                Oninventory_idChanging(value);
                ReportPropertyChanging("inventory_id");
                _inventory_id = StructuralObject.SetValidValue(value, "inventory_id");
                ReportPropertyChanged("inventory_id");
                Oninventory_idChanged();
            }
        }
        private global::System.Int32 _inventory_id;
        partial void Oninventory_idChanging(global::System.Int32 value);
        partial void Oninventory_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 customer_id
        {
            get
            {
                return _customer_id;
            }
            set
            {
                Oncustomer_idChanging(value);
                ReportPropertyChanging("customer_id");
                _customer_id = StructuralObject.SetValidValue(value, "customer_id");
                ReportPropertyChanged("customer_id");
                Oncustomer_idChanged();
            }
        }
        private global::System.Int32 _customer_id;
        partial void Oncustomer_idChanging(global::System.Int32 value);
        partial void Oncustomer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> return_date
        {
            get
            {
                return _return_date;
            }
            set
            {
                Onreturn_dateChanging(value);
                ReportPropertyChanging("return_date");
                _return_date = StructuralObject.SetValidValue(value, "return_date");
                ReportPropertyChanged("return_date");
                Onreturn_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _return_date;
        partial void Onreturn_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onreturn_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte staff_id
        {
            get
            {
                return _staff_id;
            }
            set
            {
                Onstaff_idChanging(value);
                ReportPropertyChanging("staff_id");
                _staff_id = StructuralObject.SetValidValue(value, "staff_id");
                ReportPropertyChanged("staff_id");
                Onstaff_idChanged();
            }
        }
        private global::System.Byte _staff_id;
        partial void Onstaff_idChanging(global::System.Byte value);
        partial void Onstaff_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime last_update
        {
            get
            {
                return _last_update;
            }
            set
            {
                Onlast_updateChanging(value);
                ReportPropertyChanging("last_update");
                _last_update = StructuralObject.SetValidValue(value, "last_update");
                ReportPropertyChanged("last_update");
                Onlast_updateChanged();
            }
        }
        private global::System.DateTime _last_update;
        partial void Onlast_updateChanging(global::System.DateTime value);
        partial void Onlast_updateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_rental_customer", "customer")]
        public customer customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<customer>("sakilaModel.fk_rental_customer", "customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<customer>("sakilaModel.fk_rental_customer", "customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<customer> customerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<customer>("sakilaModel.fk_rental_customer", "customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<customer>("sakilaModel.fk_rental_customer", "customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_rental_inventory", "inventory")]
        public inventory inventory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<inventory>("sakilaModel.fk_rental_inventory", "inventory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<inventory>("sakilaModel.fk_rental_inventory", "inventory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<inventory> inventoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<inventory>("sakilaModel.fk_rental_inventory", "inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<inventory>("sakilaModel.fk_rental_inventory", "inventory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_payment_rental", "payment")]
        public EntityCollection<payment> payments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<payment>("sakilaModel.fk_payment_rental", "payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<payment>("sakilaModel.fk_payment_rental", "payment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_rental_staff", "staff")]
        public staff staff
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<staff>("sakilaModel.fk_rental_staff", "staff").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<staff>("sakilaModel.fk_rental_staff", "staff").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<staff> staffReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<staff>("sakilaModel.fk_rental_staff", "staff");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<staff>("sakilaModel.fk_rental_staff", "staff", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="sakilaModel", Name="sales_by_film_category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sales_by_film_category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sales_by_film_category object.
        /// </summary>
        /// <param name="category">Initial value of the category property.</param>
        public static sales_by_film_category Createsales_by_film_category(global::System.String category)
        {
            sales_by_film_category sales_by_film_category = new sales_by_film_category();
            sales_by_film_category.category = category;
            return sales_by_film_category;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String category
        {
            get
            {
                return _category;
            }
            set
            {
                if (_category != value)
                {
                    OncategoryChanging(value);
                    ReportPropertyChanging("category");
                    _category = StructuralObject.SetValidValue(value, false, "category");
                    ReportPropertyChanged("category");
                    OncategoryChanged();
                }
            }
        }
        private global::System.String _category;
        partial void OncategoryChanging(global::System.String value);
        partial void OncategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> total_sales
        {
            get
            {
                return _total_sales;
            }
            set
            {
                Ontotal_salesChanging(value);
                ReportPropertyChanging("total_sales");
                _total_sales = StructuralObject.SetValidValue(value, "total_sales");
                ReportPropertyChanged("total_sales");
                Ontotal_salesChanged();
            }
        }
        private Nullable<global::System.Decimal> _total_sales;
        partial void Ontotal_salesChanging(Nullable<global::System.Decimal> value);
        partial void Ontotal_salesChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="sakilaModel", Name="staff")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class staff : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new staff object.
        /// </summary>
        /// <param name="staff_id">Initial value of the staff_id property.</param>
        /// <param name="first_name">Initial value of the first_name property.</param>
        /// <param name="last_name">Initial value of the last_name property.</param>
        /// <param name="address_id">Initial value of the address_id property.</param>
        /// <param name="store_id">Initial value of the store_id property.</param>
        /// <param name="active">Initial value of the active property.</param>
        /// <param name="username">Initial value of the username property.</param>
        /// <param name="last_update">Initial value of the last_update property.</param>
        public static staff Createstaff(global::System.Byte staff_id, global::System.String first_name, global::System.String last_name, global::System.Int32 address_id, global::System.Byte store_id, global::System.Boolean active, global::System.String username, global::System.DateTime last_update)
        {
            staff staff = new staff();
            staff.staff_id = staff_id;
            staff.first_name = first_name;
            staff.last_name = last_name;
            staff.address_id = address_id;
            staff.store_id = store_id;
            staff.active = active;
            staff.username = username;
            staff.last_update = last_update;
            return staff;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte staff_id
        {
            get
            {
                return _staff_id;
            }
            set
            {
                if (_staff_id != value)
                {
                    Onstaff_idChanging(value);
                    ReportPropertyChanging("staff_id");
                    _staff_id = StructuralObject.SetValidValue(value, "staff_id");
                    ReportPropertyChanged("staff_id");
                    Onstaff_idChanged();
                }
            }
        }
        private global::System.Byte _staff_id;
        partial void Onstaff_idChanging(global::System.Byte value);
        partial void Onstaff_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String first_name
        {
            get
            {
                return _first_name;
            }
            set
            {
                Onfirst_nameChanging(value);
                ReportPropertyChanging("first_name");
                _first_name = StructuralObject.SetValidValue(value, false, "first_name");
                ReportPropertyChanged("first_name");
                Onfirst_nameChanged();
            }
        }
        private global::System.String _first_name;
        partial void Onfirst_nameChanging(global::System.String value);
        partial void Onfirst_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String last_name
        {
            get
            {
                return _last_name;
            }
            set
            {
                Onlast_nameChanging(value);
                ReportPropertyChanging("last_name");
                _last_name = StructuralObject.SetValidValue(value, false, "last_name");
                ReportPropertyChanged("last_name");
                Onlast_nameChanged();
            }
        }
        private global::System.String _last_name;
        partial void Onlast_nameChanging(global::System.String value);
        partial void Onlast_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 address_id
        {
            get
            {
                return _address_id;
            }
            set
            {
                Onaddress_idChanging(value);
                ReportPropertyChanging("address_id");
                _address_id = StructuralObject.SetValidValue(value, "address_id");
                ReportPropertyChanged("address_id");
                Onaddress_idChanged();
            }
        }
        private global::System.Int32 _address_id;
        partial void Onaddress_idChanging(global::System.Int32 value);
        partial void Onaddress_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] picture
        {
            get
            {
                return StructuralObject.GetValidValue(_picture);
            }
            set
            {
                OnpictureChanging(value);
                ReportPropertyChanging("picture");
                _picture = StructuralObject.SetValidValue(value, true, "picture");
                ReportPropertyChanged("picture");
                OnpictureChanged();
            }
        }
        private global::System.Byte[] _picture;
        partial void OnpictureChanging(global::System.Byte[] value);
        partial void OnpictureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, true, "email");
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte store_id
        {
            get
            {
                return _store_id;
            }
            set
            {
                Onstore_idChanging(value);
                ReportPropertyChanging("store_id");
                _store_id = StructuralObject.SetValidValue(value, "store_id");
                ReportPropertyChanged("store_id");
                Onstore_idChanged();
            }
        }
        private global::System.Byte _store_id;
        partial void Onstore_idChanging(global::System.Byte value);
        partial void Onstore_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean active
        {
            get
            {
                return _active;
            }
            set
            {
                OnactiveChanging(value);
                ReportPropertyChanging("active");
                _active = StructuralObject.SetValidValue(value, "active");
                ReportPropertyChanged("active");
                OnactiveChanged();
            }
        }
        private global::System.Boolean _active;
        partial void OnactiveChanging(global::System.Boolean value);
        partial void OnactiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, false, "username");
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, true, "password");
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime last_update
        {
            get
            {
                return _last_update;
            }
            set
            {
                Onlast_updateChanging(value);
                ReportPropertyChanging("last_update");
                _last_update = StructuralObject.SetValidValue(value, "last_update");
                ReportPropertyChanged("last_update");
                Onlast_updateChanged();
            }
        }
        private global::System.DateTime _last_update;
        partial void Onlast_updateChanging(global::System.DateTime value);
        partial void Onlast_updateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_staff_address", "address")]
        public address address
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<address>("sakilaModel.fk_staff_address", "address").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<address>("sakilaModel.fk_staff_address", "address").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<address> addressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<address>("sakilaModel.fk_staff_address", "address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<address>("sakilaModel.fk_staff_address", "address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_payment_staff", "payment")]
        public EntityCollection<payment> payments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<payment>("sakilaModel.fk_payment_staff", "payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<payment>("sakilaModel.fk_payment_staff", "payment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_rental_staff", "rental")]
        public EntityCollection<rental> rentals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<rental>("sakilaModel.fk_rental_staff", "rental");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<rental>("sakilaModel.fk_rental_staff", "rental", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_staff_store", "store")]
        public store store
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<store>("sakilaModel.fk_staff_store", "store").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<store>("sakilaModel.fk_staff_store", "store").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<store> storeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<store>("sakilaModel.fk_staff_store", "store");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<store>("sakilaModel.fk_staff_store", "store", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_store_staff", "store")]
        public EntityCollection<store> stores
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<store>("sakilaModel.fk_store_staff", "store");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<store>("sakilaModel.fk_store_staff", "store", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="sakilaModel", Name="store")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class store : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new store object.
        /// </summary>
        /// <param name="store_id">Initial value of the store_id property.</param>
        /// <param name="manager_staff_id">Initial value of the manager_staff_id property.</param>
        /// <param name="address_id">Initial value of the address_id property.</param>
        /// <param name="last_update">Initial value of the last_update property.</param>
        public static store Createstore(global::System.Byte store_id, global::System.Byte manager_staff_id, global::System.Int32 address_id, global::System.DateTime last_update)
        {
            store store = new store();
            store.store_id = store_id;
            store.manager_staff_id = manager_staff_id;
            store.address_id = address_id;
            store.last_update = last_update;
            return store;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte store_id
        {
            get
            {
                return _store_id;
            }
            set
            {
                if (_store_id != value)
                {
                    Onstore_idChanging(value);
                    ReportPropertyChanging("store_id");
                    _store_id = StructuralObject.SetValidValue(value, "store_id");
                    ReportPropertyChanged("store_id");
                    Onstore_idChanged();
                }
            }
        }
        private global::System.Byte _store_id;
        partial void Onstore_idChanging(global::System.Byte value);
        partial void Onstore_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte manager_staff_id
        {
            get
            {
                return _manager_staff_id;
            }
            set
            {
                Onmanager_staff_idChanging(value);
                ReportPropertyChanging("manager_staff_id");
                _manager_staff_id = StructuralObject.SetValidValue(value, "manager_staff_id");
                ReportPropertyChanged("manager_staff_id");
                Onmanager_staff_idChanged();
            }
        }
        private global::System.Byte _manager_staff_id;
        partial void Onmanager_staff_idChanging(global::System.Byte value);
        partial void Onmanager_staff_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 address_id
        {
            get
            {
                return _address_id;
            }
            set
            {
                Onaddress_idChanging(value);
                ReportPropertyChanging("address_id");
                _address_id = StructuralObject.SetValidValue(value, "address_id");
                ReportPropertyChanged("address_id");
                Onaddress_idChanged();
            }
        }
        private global::System.Int32 _address_id;
        partial void Onaddress_idChanging(global::System.Int32 value);
        partial void Onaddress_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime last_update
        {
            get
            {
                return _last_update;
            }
            set
            {
                Onlast_updateChanging(value);
                ReportPropertyChanging("last_update");
                _last_update = StructuralObject.SetValidValue(value, "last_update");
                ReportPropertyChanged("last_update");
                Onlast_updateChanged();
            }
        }
        private global::System.DateTime _last_update;
        partial void Onlast_updateChanging(global::System.DateTime value);
        partial void Onlast_updateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_store_address", "address")]
        public address address
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<address>("sakilaModel.fk_store_address", "address").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<address>("sakilaModel.fk_store_address", "address").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<address> addressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<address>("sakilaModel.fk_store_address", "address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<address>("sakilaModel.fk_store_address", "address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_customer_store", "customer")]
        public EntityCollection<customer> customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<customer>("sakilaModel.fk_customer_store", "customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<customer>("sakilaModel.fk_customer_store", "customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_inventory_store", "inventory")]
        public EntityCollection<inventory> inventories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<inventory>("sakilaModel.fk_inventory_store", "inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<inventory>("sakilaModel.fk_inventory_store", "inventory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_staff_store", "staff")]
        public EntityCollection<staff> staffs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<staff>("sakilaModel.fk_staff_store", "staff");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<staff>("sakilaModel.fk_staff_store", "staff", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sakilaModel", "fk_store_staff", "staff")]
        public staff staff
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<staff>("sakilaModel.fk_store_staff", "staff").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<staff>("sakilaModel.fk_store_staff", "staff").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<staff> staffReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<staff>("sakilaModel.fk_store_staff", "staff");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<staff>("sakilaModel.fk_store_staff", "staff", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
